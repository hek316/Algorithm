import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;

class Main {

    static int MAX = 0;

    static int n = 0;
    static int[] arr;
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] s = br.readLine().split(" ");
         n = Integer.parseInt(s[0]);
        int m = Integer.parseInt(s[1]);

        arr = new int[n];
        s = br.readLine().split(" ");

        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(s[i]);
            MAX = Math.max(MAX, arr[i]);
        }
        int start =1;
        int end = MAX;
        int ans = 0;
        while (start < end) {
            int mid = (start +  end) / 2;

            if(getTree(mid) < m) {
                // 필요한 나무 보다 작을 경우
                end = mid;
            } else {
                ans = Math.max(mid, ans);
                // 필요한 나무보다 많거나 같은 경우
                start = mid + 1;

            }
        }
        System.out.println(ans);
    }

    static public long getTree(int mid){
        long sum = 0;
        for (int i = 0; i < n; i++) {
            if (arr[i] >= mid){
                sum += (arr[i] - mid);
            }
        }
        return sum;
    }

}


