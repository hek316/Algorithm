import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {

    static int n;
    static int k;
    static boolean[][][][] dp;

    static char[] c;

    static boolean check = false;
    static StringBuilder ans = new StringBuilder();
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        String[] s = br.readLine().split(" ");

        n = Integer.parseInt(s[0]);
        k = Integer.parseInt(s[1]);

        dp = new boolean[n+1][31][31][(30*29)/2 + 1];

        c = new char[n];

        find(0, 0,0, 0);
        if(ans.length() == 0) {
            System.out.println(-1);
            return;
        }

        System.out.println(ans);
    }

    public static void find(int len, int a, int b, int pair){
        if(check) return;
        if(len == n) {
            if(pair == k){
                check = true;
               // System.out.println(Arrays.toString(c));
                for (int i = 0; i < c.length; i++) {
                    ans.append(c[i]);
                }
            }
            return;
        }
        if(dp[len][a][b][pair]) {
                return;
        }

        dp[len][a][b][pair] = true;

        //a
        c[len] = 'A';
        find(len+1, a+1, b, pair);

        //b
        c[len] = 'B';
        find(len+1, a, b+1, pair+a);

        //c
        c[len] = 'C';
        find(len+1, a, b, pair+a+b);


    }

}
