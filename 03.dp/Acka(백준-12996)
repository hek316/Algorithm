import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;

class Main {


    static final int MOD = 1000000007;
    static int[][][][] dp;

    public static void main(String[] args) throws Exception {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        String[] s = br.readLine().split(" ");
        int n = Integer.parseInt(s[0]);

        int a = Integer.parseInt(s[1]);
        int b = Integer.parseInt(s[2]);
        int c = Integer.parseInt(s[3]);
        dp = new int[n + 1][a + 1][b + 1][c + 1];

        find(n, a, b, c);
        System.out.println(dp[n][a][b][c] == -1 ? 0 : dp[n][a][b][c]  );


    }

    public static int find(int n, int a, int b, int c){

        if(a == -1 ||b == -1 ||c == -1 || dp[n][a][b][c] == -1 ) {
            return 0;
        }

        if(dp[n][a][b][c]  > 0){
            return dp[n][a][b][c];
        }

        if(n == 0) {
            if(a == 0 && b == 0 && c == 0) {
                return 1;
            }
            return 0;
        }
        // a : A 가 불러야할 남은 곡
        // b : B 가 불러야할 남은 곡
        // c : C 가 불러야할 남은 곡

        long sum = 0;
        sum += find(n-1, a-1, b, c);
        sum += find(n-1, a, b-1, c);
        sum += find(n-1, a, b, c-1);
        sum += find(n-1, a-1, b-1, c);
        sum += find(n-1, a, b-1, c-1);
        sum += find(n-1, a-1, b, c-1);
        sum += find(n-1, a-1, b-1, c-1);

        if( n == 3) {

            System.out.println("Test");
        }

        if(sum == 0 ){
            dp[n][a][b][c] = -1;
            return 0;
        }
        dp[n][a][b][c] = (int)(sum %MOD);
        return dp[n][a][b][c];

    }

}





