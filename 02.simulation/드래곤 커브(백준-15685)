import java.io.*;
import java.util.*;

public class Main {

    static int[][] dir = {{0, 1}, {-1, 0}, {0, -1}, {1, 0}};
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        boolean[][] arr = new boolean[101][101];

        for (int i = 0; i < n; i++) {
            String[] s = br.readLine().split(" ");
            int b = Integer.parseInt(s[0]);
            int a = Integer.parseInt(s[1]);
            int d = Integer.parseInt(s[2]);
            int g = Integer.parseInt(s[3]);

            // 0 세대 
            List<Integer> list = new ArrayList<>();
            list.add(d);
           

            // 꼭지점 구하기
            for (int j = 1; j <= g; j++) { // 1 세대~ g 세대
                int size = list.size();
                for (int k = size -1; k >=0; k--) {
                    int next = (list.get(k) + 1) % 4;
                    list.add(next);
                }
            }
            // 드래곤 그리기
            draw(arr,  list, a, b);
        }
        // 3. 정사각형 구하기
        int count = count(arr);
        System.out.println(count);

    }
    public static void draw(boolean[][] arr, List<Integer> list, int x, int y) { 
        arr[x][y] = true;
        
        for (int i=0; i<list.size(); i++) {
            int d = list.get(i);
            x = x + dir[d][0];
            y = y + dir[d][1];
            arr[x][y] = true;
        }
    }
        
        
    public static int count(boolean[][] arr) {
        int cnt = 0;
        for (int i = 0; i < 100; i++) {
            for (int j = 0; j < 100; j++) {
                if (arr[i][j] && arr[i+1][j] && arr[i][j+1] && arr[i+1][j+1] ) {
                    cnt++;
                }
            }
        }
        return cnt;
    }
}
