import java.io.*;
import java.util.*;

public class Main {

    static int n;
    static int[] arr;
    static int[] robot;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] s = br.readLine().split(" ");
        n = Integer.parseInt(s[0]);
        int k = Integer.parseInt(s[1]);

        arr = new int[2*n];
        robot =  new int[2*n];
        s = br.readLine().split(" ");
        for (int i = 0; i < 2*n; i++) {
            arr[i] = Integer.parseInt(s[i]);
        }
        int ans = 0;
        while (true) {
            ans++;
            rotate();
            move();
            int cnt = 0;
            for (int i = 0; i < 2 * n; i++) {
                if(arr[i] == 0) cnt++;
            }
            if(cnt >= k) break;
        }
        System.out.println(ans);
    }

    public static void rotate() {
        // 내구성 회전
        int tmp = arr[2*n-1];
        for (int i = 2*n -1; i >=1; i--) {
            arr[i] = arr[i-1];
        }
        arr[0] = tmp;
        for (int i = n -1; i >=1; i--) {
            robot[i] = robot[i-1];
        }
        robot[0] = 0;
        // 로봇 즉시 내리기
        robot[n-1] = 0;
        
    }

    public static void move () {
        // 가장 먼저 올라간 로봇부터 1칸 이동
        for (int i = n-1; i >=1; i--) {
            if(robot[i] == 0 && robot[i-1] == 1) {
                if(arr[i] >= 1) {
                    arr[i]--;
                    robot[i] = 1;
                    robot[i-1] = 0;
                }
            }
        }
        if(robot[n-1] == 1 ) {
            // 로봇 즉시 내리기
            robot[n-1] = 0;
        }

        // 내구도가 0 이 아니면 로봇 올리기
        if(arr[0] > 0) {
            arr[0]--;
            robot[0] = 1;
        }
    }
}
