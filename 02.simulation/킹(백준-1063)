import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int[][] arr = new int[8][8];
        String[] s = br.readLine().split(" ");
        // 킹의 위치
        int kingC = s[0].charAt(0) - 'A';
        int kingR = s[0].charAt(1) - '1';

        // 돌의 위치
        int RockC = s[1].charAt(0) - 'A';
        int RockR = s[1].charAt(1) - '1';

        int n = Integer.parseInt(s[2]);
        for (int i = 0; i < n; i++) {
            String order = br.readLine();
            // 움직이기
            int[] move = move(kingR, kingC, order);
            int nextKingR = move[0];
            int nextKingC = move[1];
            // 범위 체크
            if(!checkRange(nextKingR, nextKingC)) continue;
            // 돌과 같을 경우
            if(nextKingR == RockR && nextKingC == RockC) {
                int[] move1 = move(RockR, RockC, order);
                int nextRockR = move1[0];
                int nextRockC = move1[1];
                if(!checkRange(nextRockR, nextRockC)) continue;
                RockR = nextRockR;
                RockC = nextRockC;
            }
            kingR = nextKingR;
            kingC = nextKingC;

        }

        System.out.println((char)(kingC+'A') + "" + (char)(kingR + '1'));
        System.out.println((char)(RockC+'A') + "" + (char)(RockR + '1') );



    }

    public static int[] move (int r, int c, String s) {
        int nr = r;
        int nc = c;
        if(s.contains("R")){
            nc++;
        }
        if(s.contains("L")){
            nc--;
        }
        if(s.contains("B")){
            nr--;
        }
        if(s.contains("T")){
            nr++;
        }
        return new int[]{nr, nc};
    }

    public static boolean checkRange(int x, int y) {
        if(x >= 0 && y >=0 && x < 8 && y < 8) {
            return true;
        }
        return false;
    }



}
