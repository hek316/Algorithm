import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.stream.Collectors;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine());
        StringBuilder sb = new StringBuilder();
        while(T-- > 0) {
            Deque<Integer> deque = new LinkedList<>();
            String order =br.readLine();
            int n = Integer.parseInt(br.readLine());
            String arr = br.readLine();
            arr = arr.replaceAll("[\\[]", "");
            arr = arr.replaceAll("[\\]]", "");
            if(!arr.contains(",")) {
                if(!arr.isEmpty()) {
                    deque.add(Integer.parseInt(arr));
                }
            } else {
                String[] sp = arr.split(",");
                for (String s : sp) {
                    deque.add(Integer.parseInt(s));
                }
            }
            boolean isError = false;
            boolean isReverse = false;
            for (char ch : order.toCharArray()) {
                if(ch == 'D') {
                    if (deque.isEmpty()) {
                        isError = true;
                        sb.append("error").append("\n");
                        break;
                    } else {
                        if(isReverse) {
                            deque.removeLast();
                        } else {
                            deque.removeFirst();
                        }
                    }
                } else {
                    isReverse = !isReverse;
                }
            }

            if(!isError) {
                sb.append("[");
                if(!deque.isEmpty()) {
                    if(isReverse == false) {
                            sb.append(deque.poll());
                            while (!deque.isEmpty()) {
                                sb.append(",").append(deque.poll());
                            }
                    } else {
                        sb.append(deque.pollLast());
                        while (!deque.isEmpty()) {
                            sb.append(",").append(deque.pollLast());
                        }
                    }

                }

                sb.append("]").append("\n");
            }

        }

        System.out.println(sb);

    }



}
