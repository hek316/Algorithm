class Solution {
    public int solution(int[] diffs, int[] times, long limit) {
     
        int start = 1;
        int end = 100000;
        while (start <= end) {
             int mid = (start + end)/2;
            
            if(find( mid,  diffs, times, limit)){
                end = mid-1; // true 인 경우 더 최솟값 찾기
            } else {
                start = mid+1; // false 인 경우 level 높이기
            }
        }
      
        return start;
    }
    
    public boolean find(int level, int[] diffs, int[] times, long limit) {
        long sum = 0;
        for (int i=0; i<diffs.length; i++) {
            if(diffs[i] > level) { // 레벨 이상 문제
                sum = sum + (diffs[i] -level) * (times[i] + times[i-1]);
            }
            sum += times[i];
            if(sum > limit) return false;
        }
        
        return true;
    }
}
