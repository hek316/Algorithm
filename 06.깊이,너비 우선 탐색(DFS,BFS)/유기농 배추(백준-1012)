import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;

class Main{


    //   유기농 배추  백준 - 1427
    // 접근 방법 : BFS 로 접근
    static int[] dx = {0,0,-1,+1};
    static int[] dy = {-1,+1,0,0};
    static int[][] arr;
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine());

        StringBuilder sb = new StringBuilder();
        while(T-- >0){
            String[] s = br.readLine().split(" ");
            int r = Integer.parseInt(s[0]);
            int c = Integer.parseInt(s[1]);
            arr = new int[r][c];
            boolean[][] visit = new boolean[r][c];
            int cnt = Integer.parseInt(s[2]); // 배추개수

            Queue<int[]> queue = new LinkedList<>();
            for(int j=0; j<cnt; j++){
                s = br.readLine().split(" ");
                int t1 = Integer.parseInt(s[0]);
                int t2 = Integer.parseInt(s[1]);
                arr[t1][t2] = 1;
                queue.add(new int[]{t1, t2});
            }
            int ans = 0;
            while(!queue.isEmpty()){
                int[] t = queue.poll();
                if(visit[t[0]][t[1]] == false){
                    ans++;
                    visit[t[0]][t[1]]= true;
                    bfs( r,  c,  visit, t[0], t[1]);
                }
            }
            sb.append(ans).append("\n");
        }


        System.out.println(sb);
    }
    public static void bfs( int r, int c, boolean[][] visit, int startX, int startY){
        Queue<int[]> queue = new LinkedList<>();
        queue.add(new int[]{startX, startY});
        while(!queue.isEmpty()){
            int[] t = queue.poll();
            for(int i=0; i<4; i++){
                int x = t[0] + dx[i];
                int y = t[1] + dy[i];
                if(x >=0 && x < r && y >=0 && y < c && arr[x][y] == 1 && visit[x][y] == false){
                    visit[x][y]=true;
                    queue.add(new int[]{x,y});
                }
            }
        }
    }

}
