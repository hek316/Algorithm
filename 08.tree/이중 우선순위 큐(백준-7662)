import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;


public class Main {


    static int n;
    static StringBuilder sb = new StringBuilder();
    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        n = Integer.parseInt(br.readLine());

        while (n-- > 0) {
            TreeMap<Integer, Integer> map= new TreeMap<>();
            int k = Integer.parseInt(br.readLine());
            for (int i = 0; i < k; i++) {
                String[] s = br.readLine().split(" ");
                if (s[0].equals("I")) {
		            int key = Integer.parseInt(s[1]);
                    map.put(key, map.getOrDefault(key, 0) +1);
                }else {
                    if(map.isEmpty()) continue;
                    // D 인 경우
                    if(s[1].equals("1")) { // 최댓값
                        int key = map.lastKey();
                        int value = map.get(key);
                        if(value == 1) {
                            map.pollLastEntry();
                        } else {
                            map.put(key, value-1);
                        }
		
                    } else {
                        
                        int key = map.firstKey();
                        int value = map.get(key);
                        if(value == 1) {
                            map.pollFirstEntry();
                        } else {
                            map.put(key, value-1);
                        }
                       
                    }
                }
            }

            if(map.isEmpty()) {
                sb.append("EMPTY").append("\n");
            } else  {
                sb.append(map.lastKey() + " " + map.firstKey()).append("\n");
            }

        }
        System.out.println(sb);
    }
}
