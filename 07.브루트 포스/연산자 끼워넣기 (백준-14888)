import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;


public class Main {

    // 2 의 20 승으로 브루트포스 가능
    static int n;

    static int[] operation = new int[4];
    static int[] arr;
    static long min = Long.MAX_VALUE;
    static long max = Long.MIN_VALUE;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        n = Integer.parseInt(br.readLine());
        arr = new int[n];
        String[] s = br.readLine().split(" ");
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(s[i]);
        }
        s = br.readLine().split(" ");
        for (int i = 0; i < 4; i++) {
            operation[i] = Integer.parseInt(s[i]);
        }
        combi(1, arr[0]);
        System.out.println(max + "\n" + min);
    }

    public static void combi(int idx, long sum) {
        if(idx == n) {
            min = Math.min(min, sum);
            max = Math.max(max, sum);
            return;
        }

        for (int i = 0; i < 4; i++) {
            if(operation[i] -1 >= 0) {
                operation[i]--;
                if(i == 0) {
                    combi(idx+1, sum + arr[idx]);
                } else if ( i == 1) {
                    combi(idx+1, sum - arr[idx]);
                }  else if ( i == 2) {
                    combi(idx+1, sum * arr[idx]);
                }  else if ( i == 3) {
                    combi(idx+1, sum / arr[idx]);
                }
                operation[i]++;
            }
        }

    }
}
